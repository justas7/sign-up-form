:root {
  --color-one: #f1f3e8;
  --color-two: #736f36;
  --color-three: #0109d7;
  --color-valid: green;
  --color-invalid: red;

  --logo-container-height: 100px;
}

@font-face {
  font-family: "Norse Bold";
  src: url("/fonts/norse-bold-webfont.woff") format("woff");
}

*,
*::after,
*::before {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-size: 16px;
  font-family: Helvetica, Arial, sans-serif;
}

/* form cointainer includes both - image container and form with its control */

#form-container {
  height: min(100vh, 1400px);
  width: min(100vw, 1400px);
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  position: relative;
}

#form-container::before {
  content: "";
  background-image: url("images/martino-pietropoli-5jz3T5LwuPA-unsplash.jpg");
  background-size: cover;
  background-position: center;
  opacity: 0.5;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: -1;
}

#form-container::after {
  content: "Photo by Martino Pietropoli on Unsplash";
  font-size: 0.6rem;
  font-weight: 600;
  position: absolute;
  color: rgb(17, 16, 16);
  bottom: 4px;
  right: 6px;
}

/* Image and logo container */

.logo-container {
  height: calc(var(--logo-container-height) + 5vw);
}

.logo {
  display: flex;
  justify-content: start;
  text-align: center;
  margin-top: 15px;
  padding: 5px 0 5px 20px;
  background-color: black;
  opacity: 0.8;
}

.logo > h1 {
  font-family: "Norse Bold", "Times New Roman", Times, serif;
  font-size: calc(3rem + 5vw);
  padding-top: 15px;
  color: var(--color-one);
}

.logo > img {
  height: calc(80px + 5vw);
}

/* form control container */

.form-control-container {
  height: calc(100% - var(--logo-container-height));
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.lets-do-this {
  padding-left: 20px;
  font-size: calc(1rem + 1vw);
  margin-bottom: 35px;
  position: relative;
}

.lets-do-this::after {
  content: "* Required field";
  position: absolute;
  font-size: calc(0.7rem + 0.1vw);
  top: calc(25px + 1vw);
  left: 20px;
}

ul {
  list-style: none;
}

ul > li {
  padding: 10px 20px;
}

ul > li > input {
  width: 250px;
  display: block;
  padding: 5px;
  border: none;
  border-radius: 4px;
  background-color: var(--color-one);
  opacity: 0.7;
  outline: 1px solid var(--color-two);
}

ul > li > input:focus {
  outline: 3px solid var(--color-three);
}

/* doesnt show invalid while user still focusig on input and empty placeholder not removed */

ul > li > input:not(:focus):not(:placeholder-shown):invalid {
  outline: 2px solid var(--color-invalid);
}

ul > li > input:not(:focus):not(:placeholder-shown):valid {
  outline: 2px solid var(--color-valid);
}

ul > li > label {
  font-weight: 700;
}

ul > li > label > span {
  position: relative;
  bottom: 4px;
}

.button {
  background-color: var(--color-one);
  padding: 5px;
  outline: 2px solid var(--color-two);
  border: none;
  border-radius: 4px;
  opacity: 0.9;
  font-weight: 600;
  margin: 10px 20px;
  width: 250px;
}

.button:hover {
  background-color: #e4e7d9;
}

.button:active {
  transform: translate(1px, -1px);
}
